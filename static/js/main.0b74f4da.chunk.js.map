{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","defaultProps","about_text","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","fWord","findWord","_useState5","_useState6","rWord","replaceWord","Fragment","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","new_text","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","replaceAll","wc","length","forEach","word","countWords","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","Alert","alert","lower","charAt","slice","capitalize","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0b74f4da.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n\r\n          <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about_text}</Link>\r\n        </li> */}\r\n        \r\n      \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light' ?'dark' : 'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===\"light\" ?\"dark\" :\"light\"} Mode</label>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes={title:PropTypes.string.isRequired,\r\nabout_text:PropTypes.string}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Add title \",\r\n  about_text: \"About\",\r\n  \r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const[text,setText]=useState(\"\");\r\n    const [fWord, findWord] = useState(\"\");\r\n    const [rWord, replaceWord] = useState(\"\");\r\n\r\n    const handleUpClick=()=>{\r\n        console.log(\"Upper case was clicked\");\r\n        let new_text=text.toUpperCase();\r\n        setText(new_text);\r\n        props.showAlert(\"Converted to Upper Case\",\"success\");\r\n    }\r\n\r\n    const handleLowClick=()=>{\r\n      console.log(\"lower case was clicked\");\r\n      let new_text=text.toLowerCase();\r\n      setText(new_text);\r\n      props.showAlert(\"Converted to Lower Case\",\"success\")\r\n\r\n  }\r\n\r\n  const handleClearClick=()=>{\r\n    console.log(\"clear text was clicked\");\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared\",\"success\")\r\n\r\n}\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleFindChange = (event) => {\r\n      findWord(event.target.value);\r\n    };\r\n\r\n    const handleReplaceChange = (event) => {\r\n    console.log(replaceWord(event.target.value)) ;\r\n    };\r\n\r\n    const handleReplaceClick = () => {\r\n      let newText = text.replaceAll(fWord,rWord);\r\n      setText(newText);\r\n      props.showAlert(\"Text Replaced!\", \"success\");\r\n\r\n    }; \r\n\r\n    const speak = () => {\r\n      let msg = new SpeechSynthesisUtterance();\r\n      msg.text = text;\r\n      window.speechSynthesis.speak(msg);\r\n    };\r\n\r\n    const handleCopyClick=()=>{\r\n      navigator.clipboard.writeText(text); \r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n      \r\n\r\n\r\n    }\r\n\r\n    const handleExtraSpaces=()=>\r\n    {\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Removed Extra Spaces\",\"success\")\r\n\r\n    }\r\n    function countWords(text){\r\n      let wc = text.split(\" \").length;\r\n      text.split(\" \").forEach((word) => {\r\n          if(!word.length){\r\n              wc -= 1;  \r\n          }\r\n      });\r\n\r\n      return wc;\r\n  }\r\n  return (\r\n    <>\r\n    <div>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <textarea className=\"form-control\" id=\"my_box\" rows=\"8\" value={text} onChange={handleOnChange}\r\n                style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}}></textarea>\r\n        </div>\r\n\r\n                <button className=\"btn btn-primary my-2 mx-1\" onClick={handleUpClick}>Convert to UPPER case</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to lower case</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n                <h3>FIND</h3>\r\n                <textarea className=\"form-control\" id=\"my_box\" rows=\"2\" value={fWord} onChange={handleFindChange}></textarea>\r\n                \r\n        </div>\r\n\r\n        <div className=\"container\">\r\n                <h3>REPLACE</h3> \r\n                <textarea className=\"form-control\" id=\"my_box\" rows=\"2\" value={rWord} onChange={handleReplaceChange}></textarea>\r\n                <button className=\"btn btn-primary my-2 mx-1\" onClick = {handleReplaceClick}>REPLACE</button>\r\n        </div>\r\n\r\n        <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n          <h2>Your Text Summary</h2>\r\n          <p>{countWords(text)} words and {text.length} characters</p>\r\n          <p>{0.008*text.split(\" \").length} Minutes took to read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter Something in the text box above  to preview\"}</p>\r\n\r\n          <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n\r\n        </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            \r\n</div>}\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n\n  const [mode,setMode]=useState(\"light\");\n  // eslint-disable-nex\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode===\"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.title=\"TextUtils-DarkMode\"\n      // setInterval(() => {\n      //   document.title=\"TextUtils is Amazing\"\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title=\"Install TextUtls Now\"\n      // }, 1500);\n    }\n    else\n    { \n      setMode(\"light\");\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title=\"TextUtils-LightMode\"\n\n\n\n    }\n  }\n\n  \n  return (\n    <>\n      {/* <Router> */}\n  <Navbar title=\"TextUtils\" about_text=\"About\"  mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}></Alert>\n  <div className=\"container my-3\">\n  {/* <Switch>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze\" mode={mode}></TextForm>\n        {/* </Route>\n        \n  </Switch> */}\n  </div>\n  {/* </Router> */}\n  {/* <About></About> */}\n  \n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}